#!/bin/bash
#
# fcinit        Startup script for Flashcam
#
# chkconfig: 345 98 10
# description: Vloopback module load for Flashcam

### BEGIN INIT INFO
# Provides:          fcinit
# Required-Start:    $local_fs $syslog
# Required-Stop:     $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Vloopback module load for Flashcam
### END INIT INFO

BINDIR=%BINDIR%

# Get flashcam params if flashcam needs to be started at boot time
PARAMS=
[ -f /etc/flashcam ] && . /etc/flashcam

# Source function library.
if [ -x /etc/rc.d/init.d/functions ]; then
    . /etc/rc.d/init.d/functions
    OK() {
	success
    }
    KO() {
	failure
    }
    START() {
	echo -n "$@"
    }
elif [ -r /lib/lsb/init-functions ]; then
    . /lib/lsb/init-functions
    OK() {
	log_end_msg 0
    }
    KO() {
	log_end_msg $?
    }
    START() {
	log_begin_msg "$@"
    }
else
    OK() {
	echo "OK."
    }
    KO() {
	echo "Failed."
    }
    START() {
	echo -n "$@"
    }
fi

RETVAL=0

start() {
        START "Starting fcinit: "
	$BINDIR/flashcam -qL
	[ -z "$PARAMS" ] || (sleep 1; $BINDIR/flashcam -D $PARAMS)
        RETVAL=$?
	[ $RETVAL = 0 ] && OK || KO
        echo
        return $RETVAL
}
stop() {
	START "Stopping fcinit: "
	killall -q flashcam
	rmmod vloopback
	RETVAL=$?
	[ $RETVAL = 0 ] && OK || KO
	echo
        return $RETVAL
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	stop
	start
	;;
  *)
	echo $"Usage: $prog {start|stop|restart}"
	exit 1
esac

exit $RETVAL
